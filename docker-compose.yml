version: '3.8'

services:
  postgres-master:
    image: postgres:15
    container_name: postgres-master
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: mydb
    volumes:
      - ./postgres-master-data:/var/lib/postgresql/data
    ports:
      - "5435:5432"  # Master'a doğrudan bağlantı için (Opsiyonel)
    networks:
      - postgres-network

  postgres-replica1:
    image: postgres:15
    container_name: postgres-replica1
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: mydb
    volumes:
      - ./postgres-replica1-data:/var/lib/postgresql/data
    networks:
      - postgres-network

  postgres-replica2:
    image: postgres:15
    container_name: postgres-replica2
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: mydb
    volumes:
      - ./postgres-replica2-data:/var/lib/postgresql/data
    networks:
      - postgres-network

  pgbouncer:
    image: edoburu/pgbouncer
    container_name: pgbouncer
    volumes:
      - ./pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini
      - ./userlist.txt:/etc/pgbouncer/userlist.txt 
    ports:
      - "6432:6432"
    depends_on:
      - postgres-master
      - postgres-replica1
      - postgres-replica2  
    networks:
      - postgres-network

  haproxy:
    image: haproxy:2.4
    container_name: haproxy
    ports:
      - "5432:5432"  # HAProxy, gelen istekleri PgBouncer üzerinden yönlendirir
      - "5433:5433"  # Read replica'lar için ayrı port
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - pgbouncer
    networks:
      - postgres-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    networks:
      - postgres-network
    depends_on:
      - prometheus

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - postgres-network
    depends_on:
      - postgres
      - haproxy
      - pgbouncer

  # Node Exporter (Prometheus için metrik toplayıcı)
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    networks:
      - postgres-network
    restart: unless-stopped
    ports:
      - "9100:9100"
      
networks:
  postgres-network:
    driver: bridge
